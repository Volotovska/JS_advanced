<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>ITEA-JS ADVANCED - LESSON 2: CLASSWORK 2</title>
  <link rel="stylesheet" href="css/style.min.css" />
</head>
<body>
  <div class="wrap">
    <style>
      
    </style>
    <div class="testBlock hover">
      <button class="iButton" id="mouseHover">Наведи</button>
      <ul id="hoverResult" class="resultBlock">
        
      </ul>
    </div>

    <div class="testBlock click">
      <button class="iButton" id="mouseClick">Нажми правой кнопкой мышки</button>
      <div id="clickResult" class="resultBlock one two three four five six"></div>
    </div>

    <div class="testBlock context">
      <button class="iButton" id="mouseContext">Вызови контекстное меню</button>
      <div id="contextResult" class="resultBlock"></div>
    </div>

    <div class="testBlock keyboard">
      <button class="iButton" id="keyboardButton">Нажми на клавиатуре</button>
      <div id="keyboardResult" class="resultBlock"></div>
    </div>

  </div>

  <script>

   /* Поработаем немного с ивентами:
      onmouseenter
      onclick
      oncontextmenu
      onkeydown

      Задание:
      На каждую из конопок назначить действие которое будет выполнять следующее действие:
      1.На ховер(onmouseenter) повесить обработчик который будет при каждом наведении
        на кнопку будет выводить в блок результатом елемент li с текстом "hovered!"
        у которого будет один из следующих класов:
        red blue green orange purple
        <li class="red">Hovered!</li>
        <li class="blue">Hovered!</li>
        <li class="orange">Hovered!</li>
        <li class="red">Hovered!</li>
        <li class="red">Hovered!</li>
  */

    var mouseHover = document.getElementById('mouseHover');
    var hoverResult = document.getElementById('hoverResult');
    var color = ['red', 'blue', 'orange', 'green', 'purple'];
    
    
    function getRandomIntInclusive(min, max) {
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }
       
    mouseHover.onmouseenter = function hover(){
       var number = getRandomIntInclusive(1,color.length); 

      var li = document.createElement('li');
      li.classList.add(color[number]);
      hoverResult.appendChild(li);
      li.innerText = 'Hovered!';
    
      console.log('hover');
      console.log(li);
  }

      // 2.На кнопку клика(onclick) повесить обработчик который будет удалять классы с
      //   блока с результатом по очереди в таком порядке:

      //   six > two > three > four > one > five

      //   после того как блок окажется пустым, добавить их в порядке возрастания

      //   one > two > three ... > six

      var mouseClick = document.getElementById('mouseClick');
      var clickResult = document.getElementById('clickResult');
      var classes1 = ['six', 'two', 'three', 'four', 'one', 'five'];
      var classes2 = ['one', 'two', 'three', 'four', 'five', 'six'];

      mouseClick.onclick = function click(){

        if(clickResult.classList.contains("five")) {
        for(var i = 0; i < classes1.length; i++){
          clickResult.classList.remove(classes1[i])
        }
      }
        else {
        for(var i = 0; i < classes2.length; i++){
          clickResult.classList.add(classes2[i])
        }
      }

      console.log('click');
      console.log(clickResult);
    }


      // 3.На кнопку контекстного меню (oncontextmenu) повесить обработчик который в блок
      //   для результата выведет блок со списком меню используя следующий шаблон:

      //   <a href="http://google.com.ua">Google</a>
      //   <a href="http://itea.ua/">ITEA</a>
      //   <a href="https://www.youtube.com/">Youtube</a>

      //   для запрета вызова контектстного меню, нужно в функцию обработчик передать событие
      //   element.onevent = function(e){...}
      //   и вызвать внутри этой функции из этой переменной
      //   e.preventDefault(); <- Отмена действия по умолчанию

      //   Повтороное кажатие на эту кнопку правой или левой кнопкой мыши должно очистить блок.

      var mouseContext =document.getElementById('mouseContext');
      var contextResult = document.getElementById('contextResult');
      var indicator = false;

        var a1 = document.createElement('a');
        a1.innerText = 'Google';
        a1.href = 'http://google.com.ua';

        var a2 = document.createElement('a');
        a2.innerText = 'ITEA';
        a2.href = 'http://itea.ua/';

        var a3 = document.createElement('a');
        a3.innerText = 'Youtube';
        a3.href = 'https://www.youtube.com/';

      mouseContext.oncontextmenu = function(e){
        if (indicator === false) {

          contextResult.appendChild(a1);
          contextResult.appendChild(a2);
          contextResult.appendChild(a3);

          indicator = true;
          console.log(indicator);
        } else {
          indicator = false;
 
          contextResult.removeChild(a1);
          contextResult.removeChild(a2);
          contextResult.removeChild(a3);
        }
        e.preventDefault();
      }

      mouseContext.onclick = function remove_div(){
        if(indicator === true){
          contextResult.removeChild(a1);
          contextResult.removeChild(a2);
          contextResult.removeChild(a3);         
        }
      }
        
    


      // 4. На кнопку с обработчиком нажатия (onkeydown) повесить обработчик который будет
      //   Выводить число нажатий на любую из клавиш клавиатуры
      var count = 0;

    keyboardButton.onkeydown = function(){
      count++;
      console.log(count);
    }

    
    // mouseHover.onmouseenter = function(){
    //   console.log('hover');
    // }
    // mouseClick.onclick = function(){
    //   console.log('click');
    // }
    // mouseContext.oncontextmenu = function(e){
    //   e.preventDefault();
    //   console.log('context');
    // }
    // keyboardButton.onkeydown = function(){
    //   console.log('keyboard');
    // 
  </script>
</body>
</html>
